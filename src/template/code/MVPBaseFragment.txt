package &package&;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;

import java.lang.reflect.ParameterizedType;

/**
* explin:
* auther:Administrator & feisher(458079442@qq.com)
* create by 2018/5/15/015 17:15
*/
public abstract class MVPBaseFragment<V extends BaseView,T extends BasePresenterImpl<V>> extends Fragment implements BaseView{
  public T mPresenter;
      @Override
      public void onCreate(@Nullable Bundle savedInstanceState) {
          super.onCreate(savedInstanceState);
          mPresenter= getInstance(this,1);
          mPresenter.attachView((V) this);
      }

      @Override
      public void onDestroy() {
          super.onDestroy();
          if (mPresenter!=null){
              mPresenter.detachView();
           }
      }

      @Override
      public Context getContext() {
          return super.getContext();
      }

      public  <T> T getInstance(Object o, int i) {
              try {
                  return ((Class<T>) ((ParameterizedType) (o.getClass() .getGenericSuperclass())).getActualTypeArguments()[i]).newInstance();
  //如需要转化为kotlin代码，这里请 return  下方代码
  // ((o.javaClass.genericSuperclass as ParameterizedType).getActualTypeArguments()[i] as Class<T>).newInstance()
              } catch (InstantiationException e) {
                  e.printStackTrace();
              } catch (IllegalAccessException e) {
                  e.printStackTrace();
              } catch (ClassCastException e) {
                  e.printStackTrace();
              } catch (java.lang.InstantiationException e) {
                  e.printStackTrace();
              }
              return null;
          }
}
